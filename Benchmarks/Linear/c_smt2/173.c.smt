(set-logic LIA)

( declare-const i Int )
( declare-const i! Int )
( declare-const j Int )
( declare-const j! Int )
( declare-const turn Int )
( declare-const turn! Int )
( declare-const x Int )
( declare-const x! Int )
( declare-const y Int )
( declare-const y! Int )
( declare-const tmp Int )
( declare-const tmp! Int )

( declare-const i_0 Int )
( declare-const i_1 Int )
( declare-const i_2 Int )
( declare-const i_3 Int )
( declare-const i_4 Int )
( declare-const i_5 Int )
( declare-const j_0 Int )
( declare-const j_1 Int )
( declare-const j_2 Int )
( declare-const j_3 Int )
( declare-const j_4 Int )
( declare-const j_5 Int )
( declare-const turn_0 Int )
( declare-const turn_1 Int )
( declare-const turn_2 Int )
( declare-const turn_3 Int )
( declare-const turn_4 Int )
( declare-const turn_5 Int )
( declare-const turn_6 Int )
( declare-const turn_7 Int )
( declare-const turn_8 Int )
( declare-const x_0 Int )
( declare-const x_1 Int )
( declare-const x_2 Int )
( declare-const x_3 Int )
( declare-const x_4 Int )
( declare-const x_5 Int )
( declare-const y_0 Int )
( declare-const y_1 Int )
( declare-const y_2 Int )
( declare-const y_3 Int )
( declare-const y_4 Int )

( define-fun inv-f( ( i Int )( j Int )( turn Int )( x Int )( y Int )( tmp Int ) ) Bool
SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
)

( define-fun pre-f ( ( i Int )( j Int )( turn Int )( x Int )( y Int )( tmp Int )( i_0 Int )( i_1 Int )( i_2 Int )( i_3 Int )( i_4 Int )( i_5 Int )( j_0 Int )( j_1 Int )( j_2 Int )( j_3 Int )( j_4 Int )( j_5 Int )( turn_0 Int )( turn_1 Int )( turn_2 Int )( turn_3 Int )( turn_4 Int )( turn_5 Int )( turn_6 Int )( turn_7 Int )( turn_8 Int )( x_0 Int )( x_1 Int )( x_2 Int )( x_3 Int )( x_4 Int )( x_5 Int )( y_0 Int )( y_1 Int )( y_2 Int )( y_3 Int )( y_4 Int ) ) Bool
	( and
		( = i i_1 )
		( = j j_1 )
		( = turn turn_1 )
		( = x x_1 )
		( = y y_1 )
		( = x_1 0 )
		( = y_1 0 )
		( = i_1 0 )
		( = j_1 0 )
		( = turn_1 0 )
	)
)

( define-fun trans-f ( ( i Int )( j Int )( turn Int )( x Int )( y Int )( tmp Int )( i! Int )( j! Int )( turn! Int )( x! Int )( y! Int )( tmp! Int )( i_0 Int )( i_1 Int )( i_2 Int )( i_3 Int )( i_4 Int )( i_5 Int )( j_0 Int )( j_1 Int )( j_2 Int )( j_3 Int )( j_4 Int )( j_5 Int )( turn_0 Int )( turn_1 Int )( turn_2 Int )( turn_3 Int )( turn_4 Int )( turn_5 Int )( turn_6 Int )( turn_7 Int )( turn_8 Int )( x_0 Int )( x_1 Int )( x_2 Int )( x_3 Int )( x_4 Int )( x_5 Int )( y_0 Int )( y_1 Int )( y_2 Int )( y_3 Int )( y_4 Int ) ) Bool
	( or
		( and
			( = i_2 i )
			( = j_2 j )
			( = turn_2 turn )
			( = x_2 x )
			( = y_2 y )
			( = i_2 i! )
			( = j_2 j! )
			( = turn_2 turn! )
			( = x_2 x! )
			( = y_2 y! )
			( = i i! )
			( = j j! )
			( = x x! )
			( = y y! )
			(= tmp tmp! )
		)
		( and
			( = i_2 i )
			( = j_2 j )
			( = turn_2 turn )
			( = x_2 x )
			( = y_2 y )
			( >= turn_2 0 )
			( < turn_2 3 )
			( = turn_2 0 )
			( = turn_3 1 )
			( = i_3 i_2 )
			( = j_3 j_2 )
			( = turn_5 turn_3 )
			( = x_3 x_2 )
			( = y_3 y_2 )
			( = i_3 i! )
			( = j_3 j! )
			( = turn_5 turn! )
			( = x_3 x! )
			( = y_3 y! )
			(= tmp tmp! )
		)
		( and
			( = i_2 i )
			( = j_2 j )
			( = turn_2 turn )
			( = x_2 x )
			( = y_2 y )
			( >= turn_2 0 )
			( < turn_2 3 )
			( = turn_2 0 )
			( = turn_4 2 )
			( = i_3 i_2 )
			( = j_3 j_2 )
			( = turn_5 turn_4 )
			( = x_3 x_2 )
			( = y_3 y_2 )
			( = i_3 i! )
			( = j_3 j! )
			( = turn_5 turn! )
			( = x_3 x! )
			( = y_3 y! )
			(= tmp tmp! )
		)
		( and
			( = i_2 i )
			( = j_2 j )
			( = turn_2 turn )
			( = x_2 x )
			( = y_2 y )
			( >= turn_2 0 )
			( < turn_2 3 )
			( not ( = turn_2 0 ) )
			( = turn_2 1 )
			( = x_2 y_2 )
			( = x_2 y_2 )
			( = i_4 ( + i_2 1 ) )
			( = i_5 i_4 )
			( = j_4 j_2 )
			( = turn_6 1 )
			( = i_3 i_5 )
			( = j_3 j_4 )
			( = turn_5 turn_6 )
			( = x_3 x_2 )
			( = y_3 y_2 )
			( = i_3 i! )
			( = j_3 j! )
			( = turn_5 turn! )
			( = x_3 x! )
			( = y_3 y! )
			(= tmp tmp! )
		)
		( and
			( = i_2 i )
			( = j_2 j )
			( = turn_2 turn )
			( = x_2 x )
			( = y_2 y )
			( >= turn_2 0 )
			( < turn_2 3 )
			( not ( = turn_2 0 ) )
			( = turn_2 1 )
			( = x_2 y_2 )
			( = x_2 y_2 )
			( = i_4 ( + i_2 1 ) )
			( = i_5 i_4 )
			( = j_4 j_2 )
			( = turn_7 2 )
			( = i_3 i_5 )
			( = j_3 j_4 )
			( = turn_5 turn_7 )
			( = x_3 x_2 )
			( = y_3 y_2 )
			( = i_3 i! )
			( = j_3 j! )
			( = turn_5 turn! )
			( = x_3 x! )
			( = y_3 y! )
			(= tmp tmp! )
		)
		( and
			( = i_2 i )
			( = j_2 j )
			( = turn_2 turn )
			( = x_2 x )
			( = y_2 y )
			( >= turn_2 0 )
			( < turn_2 3 )
			( not ( = turn_2 0 ) )
			( = turn_2 1 )
			( = x_2 y_2 )
			( not ( = x_2 y_2 ) )
			( = j_5 ( + j_2 1 ) )
			( = i_5 i_2 )
			( = j_4 j_5 )
			( = turn_6 1 )
			( = i_3 i_5 )
			( = j_3 j_4 )
			( = turn_5 turn_6 )
			( = x_3 x_2 )
			( = y_3 y_2 )
			( = i_3 i! )
			( = j_3 j! )
			( = turn_5 turn! )
			( = x_3 x! )
			( = y_3 y! )
			(= tmp tmp! )
		)
		( and
			( = i_2 i )
			( = j_2 j )
			( = turn_2 turn )
			( = x_2 x )
			( = y_2 y )
			( >= turn_2 0 )
			( < turn_2 3 )
			( not ( = turn_2 0 ) )
			( = turn_2 1 )
			( = x_2 y_2 )
			( not ( = x_2 y_2 ) )
			( = j_5 ( + j_2 1 ) )
			( = i_5 i_2 )
			( = j_4 j_5 )
			( = turn_7 2 )
			( = i_3 i_5 )
			( = j_3 j_4 )
			( = turn_5 turn_7 )
			( = x_3 x_2 )
			( = y_3 y_2 )
			( = i_3 i! )
			( = j_3 j! )
			( = turn_5 turn! )
			( = x_3 x! )
			( = y_3 y! )
			(= tmp tmp! )
		)
		( and
			( = i_2 i )
			( = j_2 j )
			( = turn_2 turn )
			( = x_2 x )
			( = y_2 y )
			( >= turn_2 0 )
			( < turn_2 3 )
			( not ( = turn_2 0 ) )
			( = turn_2 1 )
			( not ( = x_2 y_2 ) )
			( = turn_2 2 )
			( >= i_2 j_2 )
			( >= i_2 j_2 )
			( = x_4 ( + x_2 1 ) )
			( = x_5 x_4 )
			( = y_4 ( + y_2 1 ) )
			( = turn_8 0 )
			( = i_3 i_2 )
			( = j_3 j_2 )
			( = turn_5 turn_8 )
			( = x_3 x_5 )
			( = y_3 y_4 )
			( = i_3 i! )
			( = j_3 j! )
			( = turn_5 turn! )
			( = x_3 x! )
			( = y_3 y! )
			(= tmp tmp! )
		)
		( and
			( = i_2 i )
			( = j_2 j )
			( = turn_2 turn )
			( = x_2 x )
			( = y_2 y )
			( >= turn_2 0 )
			( < turn_2 3 )
			( not ( = turn_2 0 ) )
			( = turn_2 1 )
			( not ( = x_2 y_2 ) )
			( = turn_2 2 )
			( >= i_2 j_2 )
			( not ( >= i_2 j_2 ) )
			( = x_5 x_2 )
			( = y_4 ( + y_2 1 ) )
			( = turn_8 0 )
			( = i_3 i_2 )
			( = j_3 j_2 )
			( = turn_5 turn_8 )
			( = x_3 x_5 )
			( = y_3 y_4 )
			( = i_3 i! )
			( = j_3 j! )
			( = turn_5 turn! )
			( = x_3 x! )
			( = y_3 y! )
			(= tmp tmp! )
		)
		( and
			( = i_2 i )
			( = j_2 j )
			( = turn_2 turn )
			( = x_2 x )
			( = y_2 y )
			( >= turn_2 0 )
			( < turn_2 3 )
			( not ( = turn_2 0 ) )
			( = turn_2 1 )
			( not ( = x_2 y_2 ) )
			( = turn_2 2 )
			( not ( >= i_2 j_2 ) )
			( = i_3 i_2 )
			( = j_3 j_2 )
			( = turn_5 turn_2 )
			( = x_3 x_2 )
			( = y_3 y_2 )
			( = i_3 i! )
			( = j_3 j! )
			( = turn_5 turn! )
			( = x_3 x! )
			( = y_3 y! )
			(= tmp tmp! )
		)
		( and
			( = i_2 i )
			( = j_2 j )
			( = turn_2 turn )
			( = x_2 x )
			( = y_2 y )
			( >= turn_2 0 )
			( < turn_2 3 )
			( not ( = turn_2 0 ) )
			( = turn_2 1 )
			( not ( = x_2 y_2 ) )
			( not ( = turn_2 2 ) )
			( = i_3 i_2 )
			( = j_3 j_2 )
			( = turn_5 turn_2 )
			( = x_3 x_2 )
			( = y_3 y_2 )
			( = i_3 i! )
			( = j_3 j! )
			( = turn_5 turn! )
			( = x_3 x! )
			( = y_3 y! )
			(= tmp tmp! )
		)
		( and
			( = i_2 i )
			( = j_2 j )
			( = turn_2 turn )
			( = x_2 x )
			( = y_2 y )
			( >= turn_2 0 )
			( < turn_2 3 )
			( not ( = turn_2 0 ) )
			( not ( = turn_2 1 ) )
			( = turn_2 2 )
			( >= i_2 j_2 )
			( >= i_2 j_2 )
			( = x_4 ( + x_2 1 ) )
			( = x_5 x_4 )
			( = y_4 ( + y_2 1 ) )
			( = turn_8 0 )
			( = i_3 i_2 )
			( = j_3 j_2 )
			( = turn_5 turn_8 )
			( = x_3 x_5 )
			( = y_3 y_4 )
			( = i_3 i! )
			( = j_3 j! )
			( = turn_5 turn! )
			( = x_3 x! )
			( = y_3 y! )
			(= tmp tmp! )
		)
		( and
			( = i_2 i )
			( = j_2 j )
			( = turn_2 turn )
			( = x_2 x )
			( = y_2 y )
			( >= turn_2 0 )
			( < turn_2 3 )
			( not ( = turn_2 0 ) )
			( not ( = turn_2 1 ) )
			( = turn_2 2 )
			( >= i_2 j_2 )
			( not ( >= i_2 j_2 ) )
			( = x_5 x_2 )
			( = y_4 ( + y_2 1 ) )
			( = turn_8 0 )
			( = i_3 i_2 )
			( = j_3 j_2 )
			( = turn_5 turn_8 )
			( = x_3 x_5 )
			( = y_3 y_4 )
			( = i_3 i! )
			( = j_3 j! )
			( = turn_5 turn! )
			( = x_3 x! )
			( = y_3 y! )
			(= tmp tmp! )
		)
		( and
			( = i_2 i )
			( = j_2 j )
			( = turn_2 turn )
			( = x_2 x )
			( = y_2 y )
			( >= turn_2 0 )
			( < turn_2 3 )
			( not ( = turn_2 0 ) )
			( not ( = turn_2 1 ) )
			( = turn_2 2 )
			( not ( >= i_2 j_2 ) )
			( = i_3 i_2 )
			( = j_3 j_2 )
			( = turn_5 turn_2 )
			( = x_3 x_2 )
			( = y_3 y_2 )
			( = i_3 i! )
			( = j_3 j! )
			( = turn_5 turn! )
			( = x_3 x! )
			( = y_3 y! )
			(= tmp tmp! )
		)
		( and
			( = i_2 i )
			( = j_2 j )
			( = turn_2 turn )
			( = x_2 x )
			( = y_2 y )
			( >= turn_2 0 )
			( < turn_2 3 )
			( not ( = turn_2 0 ) )
			( not ( = turn_2 1 ) )
			( not ( = turn_2 2 ) )
			( = i_3 i_2 )
			( = j_3 j_2 )
			( = turn_5 turn_2 )
			( = x_3 x_2 )
			( = y_3 y_2 )
			( = i_3 i! )
			( = j_3 j! )
			( = turn_5 turn! )
			( = x_3 x! )
			( = y_3 y! )
			(= tmp tmp! )
		)
		( and
			( >= turn_2 0 )
			( not ( < turn_2 3 ) )
			(= i i_1 )
			(= i! i_1 )
			(= j j_1 )
			(= j! j_1 )
			(= turn turn_1 )
			(= turn! turn_1 )
			(= x x_1 )
			(= x! x_1 )
			(= y y_1 )
			(= y! y_1 )
			(= tmp tmp! )
		)
	)
)

( define-fun post-f ( ( i Int )( j Int )( turn Int )( x Int )( y Int )( tmp Int )( i_0 Int )( i_1 Int )( i_2 Int )( i_3 Int )( i_4 Int )( i_5 Int )( j_0 Int )( j_1 Int )( j_2 Int )( j_3 Int )( j_4 Int )( j_5 Int )( turn_0 Int )( turn_1 Int )( turn_2 Int )( turn_3 Int )( turn_4 Int )( turn_5 Int )( turn_6 Int )( turn_7 Int )( turn_8 Int )( x_0 Int )( x_1 Int )( x_2 Int )( x_3 Int )( x_4 Int )( x_5 Int )( y_0 Int )( y_1 Int )( y_2 Int )( y_3 Int )( y_4 Int ) ) Bool
	( or
		( not
			( and
				( = i i_2)
				( = j j_2)
				( = turn turn_2)
				( = x x_2)
				( = y y_2)
			)
		)
		( not
			( and
				( not ( >= turn_2 0 ) )
				( not ( >= i_2 j_2 ) )
			)
		)
	)
)
SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( pre-f i j turn x y tmp i_0 i_1 i_2 i_3 i_4 i_5 j_0 j_1 j_2 j_3 j_4 j_5 turn_0 turn_1 turn_2 turn_3 turn_4 turn_5 turn_6 turn_7 turn_8 x_0 x_1 x_2 x_3 x_4 x_5 y_0 y_1 y_2 y_3 y_4  )
		( inv-f i j turn x y tmp )
	)
))

SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( and
			( inv-f i j turn x y tmp )
			( trans-f i j turn x y tmp i! j! turn! x! y! tmp! i_0 i_1 i_2 i_3 i_4 i_5 j_0 j_1 j_2 j_3 j_4 j_5 turn_0 turn_1 turn_2 turn_3 turn_4 turn_5 turn_6 turn_7 turn_8 x_0 x_1 x_2 x_3 x_4 x_5 y_0 y_1 y_2 y_3 y_4 )
		)
		( inv-f i! j! turn! x! y! tmp! )
	)
))

SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( inv-f i j turn x y tmp  )
		( post-f i j turn x y tmp i_0 i_1 i_2 i_3 i_4 i_5 j_0 j_1 j_2 j_3 j_4 j_5 turn_0 turn_1 turn_2 turn_3 turn_4 turn_5 turn_6 turn_7 turn_8 x_0 x_1 x_2 x_3 x_4 x_5 y_0 y_1 y_2 y_3 y_4 )
	)
))


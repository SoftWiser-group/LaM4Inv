(set-logic QF_NIA)

( declare-const a Int )
( declare-const a! Int )
( declare-const b Int )
( declare-const b! Int )
( declare-const p Int )
( declare-const p! Int )
( declare-const q Int )
( declare-const q! Int )
( declare-const x Int )
( declare-const x! Int )
( declare-const y Int )
( declare-const y! Int )

( declare-const a_0 Int )
( declare-const a_1 Int )
( declare-const a_2 Int )
( declare-const a_3 Int )
( declare-const a_4 Int )
( declare-const a_5 Int )
( declare-const b_0 Int )
( declare-const b_1 Int )
( declare-const b_2 Int )
( declare-const b_3 Int )
( declare-const b_4 Int )
( declare-const b_5 Int )
( declare-const p_0 Int )
( declare-const p_1 Int )
( declare-const p_2 Int )
( declare-const p_3 Int )
( declare-const q_0 Int )
( declare-const q_1 Int )
( declare-const q_2 Int )
( declare-const q_3 Int )
( declare-const q_4 Int )
( declare-const q_5 Int )
( declare-const x_0 Int )
( declare-const y_0 Int )

( define-fun inv-f( ( a Int )( b Int )( p Int )( q Int )( x Int )( y Int ) ) Bool
SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
)

( define-fun pre-f ( ( a Int )( b Int )( p Int )( q Int )( x Int )( y Int )( a_0 Int )( a_1 Int )( a_2 Int )( a_3 Int )( a_4 Int )( a_5 Int )( b_0 Int )( b_1 Int )( b_2 Int )( b_3 Int )( b_4 Int )( b_5 Int )( p_0 Int )( p_1 Int )( p_2 Int )( p_3 Int )( q_0 Int )( q_1 Int )( q_2 Int )( q_3 Int )( q_4 Int )( q_5 Int )( x_0 Int )( y_0 Int ) ) Bool
	( and
		( = a a_0 )
		( = b b_0 )
		( = p p_0 )
		( = q q_0 )
		( = x x_0 )
		( = y y_0 )
		( >= x_0 1 )
		( >= y_0 1 )
		( = a_0 x_0 )
		( = b_0 y_0 )
		( = p_0 1 )
		( = q_0 0 )
	)
)

( define-fun trans-f ( ( a Int )( b Int )( p Int )( q Int )( x Int )( y Int )( a! Int )( b! Int )( p! Int )( q! Int )( x! Int )( y! Int )( a_0 Int )( a_1 Int )( a_2 Int )( a_3 Int )( a_4 Int )( a_5 Int )( b_0 Int )( b_1 Int )( b_2 Int )( b_3 Int )( b_4 Int )( b_5 Int )( p_0 Int )( p_1 Int )( p_2 Int )( p_3 Int )( q_0 Int )( q_1 Int )( q_2 Int )( q_3 Int )( q_4 Int )( q_5 Int )( x_0 Int )( y_0 Int ) ) Bool
	( or
		( and
			( = a_1 a )
			( = b_1 b )
			( = p_1 p )
			( = q_1 q )
			( = a_1 a! )
			( = b_1 b! )
			( = p_1 p! )
			( = q_1 q! )
			( = b b! )
			( = p p! )
			( = q q! )
			( = x x! )
			( = y y! )
		)
		( and
			( = a_1 a )
			( = b_1 b )
			( = p_1 p )
			( = q_1 q )
			( not ( = a_1 0 ) )
			( not ( = b_1 0 ) )
			( = ( mod a_1 2 ) 0 )
			( = ( mod b_1 2 ) 0 )
			( = a_2 ( div a_1 2 ) )
			( = b_2 ( div b_1 2 ) )
			( = p_2 ( * 4 p_1 ) )
			( = a_3 a_2 )
			( = b_3 b_2 )
			( = p_3 p_2 )
			( = q_2 q_1 )
			( = a_3 a! )
			( = b_3 b! )
			( = p_3 p! )
			( = q_2 q! )
			(= x x_0 )
			(= x! x_0 )
			(= y y_0 )
			(= y! y_0 )
		)
		( and
			( = a_1 a )
			( = b_1 b )
			( = p_1 p )
			( = q_1 q )
			( not ( = a_1 0 ) )
			( not ( = b_1 0 ) )
			( = ( mod a_1 2 ) 1 )
			( = ( mod b_1 2 ) 0 )
			( = a_4 ( - a_1 1 ) )
			( = q_3 ( + q_1 ( * b_1 p_1 ) ) )
			( = a_3 a_4 )
			( = b_3 b_1 )
			( = p_3 p_1 )
			( = q_2 q_3 )
			( = a_3 a! )
			( = b_3 b! )
			( = p_3 p! )
			( = q_2 q! )
			(= x x_0 )
			(= x! x_0 )
			(= y y_0 )
			(= y! y_0 )
		)
		( and
			( = a_1 a )
			( = b_1 b )
			( = p_1 p )
			( = q_1 q )
			( not ( = a_1 0 ) )
			( not ( = b_1 0 ) )
			( = ( mod a_1 2 ) 0 )
			( = ( mod b_1 2 ) 1 )
			( = b_4 ( - b_1 1 ) )
			( = q_4 ( + q_1 ( * a_1 p_1 ) ) )
			( = a_3 a_1 )
			( = b_3 b_4 )
			( = p_3 p_1 )
			( = q_2 q_4 )
			( = a_3 a! )
			( = b_3 b! )
			( = p_3 p! )
			( = q_2 q! )
			(= x x_0 )
			(= x! x_0 )
			(= y y_0 )
			(= y! y_0 )
		)
		( and
			( = a_1 a )
			( = b_1 b )
			( = p_1 p )
			( = q_1 q )
			( not ( = a_1 0 ) )
			( not ( = b_1 0 ) )
			( = ( mod a_1 2 ) 1 )
			( = ( mod b_1 2 ) 1 )
			( = a_5 ( - a_1 1 ) )
			( = b_5 ( - b_1 1 ) )
			( = q_5 ( + q_1 ( * ( + ( + a_5 b_5 ) 1 ) p_1 ) ) )
			( = a_3 a_5 )
			( = b_3 b_5 )
			( = p_3 p_1 )
			( = q_2 q_5 )
			( = a_3 a! )
			( = b_3 b! )
			( = p_3 p! )
			( = q_2 q! )
			(= x x_0 )
			(= x! x_0 )
			(= y y_0 )
			(= y! y_0 )
		)
	)
)

( define-fun post-f ( ( a Int )( b Int )( p Int )( q Int )( x Int )( y Int )( a_0 Int )( a_1 Int )( a_2 Int )( a_3 Int )( a_4 Int )( a_5 Int )( b_0 Int )( b_1 Int )( b_2 Int )( b_3 Int )( b_4 Int )( b_5 Int )( p_0 Int )( p_1 Int )( p_2 Int )( p_3 Int )( q_0 Int )( q_1 Int )( q_2 Int )( q_3 Int )( q_4 Int )( q_5 Int )( x_0 Int )( y_0 Int ) ) Bool
	( or
        (and ( not ( = b 0 ) ) ( not ( = a 0 ) ) )
        ( = q ( * x y ) )
	)
)
SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( pre-f a b p q x y a_0 a_1 a_2 a_3 a_4 a_5 b_0 b_1 b_2 b_3 b_4 b_5 p_0 p_1 p_2 p_3 q_0 q_1 q_2 q_3 q_4 q_5 x_0 y_0  )
		( inv-f a b p q x y )
	)
))

SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( and
			( inv-f a b p q x y )
			( trans-f a b p q x y a! b! p! q! x! y! a_0 a_1 a_2 a_3 a_4 a_5 b_0 b_1 b_2 b_3 b_4 b_5 p_0 p_1 p_2 p_3 q_0 q_1 q_2 q_3 q_4 q_5 x_0 y_0 )
		)
		( inv-f a! b! p! q! x! y! )
	)
))

SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( inv-f a b p q x y  )
		( post-f a b p q x y a_0 a_1 a_2 a_3 a_4 a_5 b_0 b_1 b_2 b_3 b_4 b_5 p_0 p_1 p_2 p_3 q_0 q_1 q_2 q_3 q_4 q_5 x_0 y_0 )
	)
))

